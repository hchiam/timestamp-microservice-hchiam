 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

const fs = require('fs');
const express = require('express');
const app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}


app.use('/public', express.static(process.cwd() + '/public'));

// app.route('/_api/package.json')
//   .get(function(req, res, next) {
//     console.log('requested');
//     fs.readFile(__dirname + '/package.json', function(err, data) {
//       if(err) return next(err);
//       res.type('txt').send(data.toString());
//     });
//   });


app.route('/:time')
  .get(function(req, res, next) {
    console.log('some kind of custom request');
    var requestData = req.params.time;
    var outputData = {'unix':null,'natural':null};
    var regex = /\w+ \d+, \d{4}/; // example: 'January 1, 2017'
  
    if (!isNaN(requestData)) { // if unix (number)
      
      outputData.unix = Number(requestData);
      var date = new Date(outputData.unix*1000); // 1000 ms --> per 1 s
      var month = date.getMonth();
      var day = date.getDate(); // getDay() gives day of the week, not day of the month
      var year = date.getFullYear();
      var monthID = new Array();
      monthID[0] = "January";
      monthID[1] = "February";
      monthID[2] = "March";
      monthID[3] = "April";
      monthID[4] = "May";
      monthID[5] = "June";
      monthID[6] = "July";
      monthID[7] = "August";
      monthID[8] = "September";
      monthID[9] = "October";
      monthID[10] = "November";
      monthID[11] = "December";
      var monthName = monthID[month];
      outputData.natural = monthName + ' ' + day + ', ' + year;
      
    } else if (regex.test(requestData)) { // if natural date
      
      outputData.natural = requestData;
      outputData.unix = Date.parse(requestData)/1000;
      
    }
    res.type('json').send(outputData);
  });
  

app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })


// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('404: Not found');
});


// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})


app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

